/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ulb.lisa.infoh400.labs2022.view;

import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import ulb.lisa.infoh400.labs2022.controller.DoctorJpaController;
import ulb.lisa.infoh400.labs2022.controller.PatientJpaController;
import ulb.lisa.infoh400.labs2022.model.Doctor;
import ulb.lisa.infoh400.labs2022.model.Patient;

/**
 *
 * @author renau
 */
public class PatientWindow extends javax.swing.JFrame {

    private final EntityManagerFactory emfac = Persistence.createEntityManagerFactory("infoh400_PU");
    private final DoctorJpaController doctorCtrl = new DoctorJpaController(emfac);
    private int docId = 0;
    private List<Doctor> mydocs;
    
    public PatientWindow() {
        initComponents();
        mydocs = new ArrayList <Doctor>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchDoctorList = new javax.swing.JList<>();
        searchDoctorsList = new javax.swing.JLabel();
        refreshButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        doctorInfoTextArea = new javax.swing.JTextArea();
        doctorInfoLabel = new javax.swing.JLabel();
        yourDoctorLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        yourDoctorList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome to your data");

        searchDoctorList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchDoctorListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(searchDoctorList);

        searchDoctorsList.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchDoctorsList.setText("Research Doctor");

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        doctorInfoTextArea.setColumns(20);
        doctorInfoTextArea.setRows(5);
        jScrollPane2.setViewportView(doctorInfoTextArea);

        doctorInfoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        doctorInfoLabel.setText("Doctor informations");

        yourDoctorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yourDoctorLabel.setText("Your doctor");

        yourDoctorList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        yourDoctorList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yourDoctorListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(yourDoctorList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(yourDoctorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchDoctorsList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                    .addComponent(refreshButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(doctorInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchDoctorsList)
                    .addComponent(doctorInfoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshButton)
                        .addGap(18, 18, 18)
                        .addComponent(yourDoctorLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refreshDoctorList();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void yourDoctorListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yourDoctorListMouseClicked
        String out = "";
        
        if (evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1 && yourDoctorList.getSelectedIndex() >= 0) {
            
            EntityListModel model = (EntityListModel) yourDoctorList.getModel();
                
            Doctor selected = (Doctor) model.getList().get(yourDoctorList.getSelectedIndex());
            
            String spe = selected.getSpecialty();
            String inami = selected.getInami();
            int nbrAppointment = selected.getAppointmentList().size();
            
            
            out = "Speciality : " + spe + "\n"
                + "Inami : " + inami + "\n"
                + "Pending appointments : " + nbrAppointment + "\n";
            
         }
        
        
        doctorInfoTextArea.setText(out);
    }//GEN-LAST:event_yourDoctorListMouseClicked

    private void searchDoctorListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchDoctorListMouseClicked
        String out = "";
        
        if (evt.getClickCount() == 2 && evt.getButton() == MouseEvent.BUTTON1 && searchDoctorList.getSelectedIndex() >= 0) {
            
            EntityListModel model = (EntityListModel) searchDoctorList.getModel();
         
                
            Doctor selected = (Doctor) model.getList().get(searchDoctorList.getSelectedIndex());
            
            String spe = selected.getSpecialty();
            int nbrAppointment = selected.getAppointmentList().size();
            docId =  selected.getIddoctor();
            
            out = "Speciality : " + spe + "\n"
                + "Pending appointments : " + nbrAppointment + "\n";
            
         }
        refreshYourDoctorList(docId);
        doctorInfoTextArea.setText(out);
    }//GEN-LAST:event_searchDoctorListMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel doctorInfoLabel;
    private javax.swing.JTextArea doctorInfoTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton refreshButton;
    private javax.swing.JList<String> searchDoctorList;
    private javax.swing.JLabel searchDoctorsList;
    private javax.swing.JLabel yourDoctorLabel;
    private javax.swing.JList<String> yourDoctorList;
    // End of variables declaration//GEN-END:variables

    private void refreshDoctorList() {
        List doctors = doctorCtrl.findDoctorEntities();
        EntityListModel<Doctor> model = new EntityListModel(doctors);
 
        searchDoctorList.setModel(model);
        //tempo pour test
        //yourDoctorList.setModel(model);
    }

    private void refreshYourDoctorList(int docId) {
        Doctor doc = doctorCtrl.findDoctor(docId);
        if (!mydocs.contains(doc)){
            mydocs.add(doc);
        }
        EntityListModel<Doctor> model = new EntityListModel(mydocs);
        yourDoctorList.setModel(model);
    }
}
